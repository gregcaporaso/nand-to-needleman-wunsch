// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Math.jack

/**
 * A library of commonly used mathematical functions.
 * Note: Jack compilers implement multiplication and division using OS method calls.
 */
class Math {
    static Array twoToThe;

    /** Initializes the library. */
    function void init() {
        let twoToThe = Array.new(16);
        let twoToThe[0] = 1;
        let twoToThe[1] = 2;
        let twoToThe[2] = 4;
        let twoToThe[3] = 8;
        let twoToThe[4] = 16;
        let twoToThe[5] = 32;
        let twoToThe[6] = 64;
        let twoToThe[7] = 128;
        let twoToThe[8] = 256;
        let twoToThe[9] = 512;
        let twoToThe[10] = 1024;
        let twoToThe[11] = 2048;
        let twoToThe[12] = 4096;
        let twoToThe[13] = 8192;
        let twoToThe[14] = 16384;
    }

    /** Return x as an array of true/false values indicating its 16-bit
     *  encoding.
     */
    function Array bitArray(int x) {
        var Array result;
        var int i;
        var boolean negate;

        if (x < 0) {
            let x = x * -1;
            let negate = true;
        } else {
            let negate = false;
        }

        let result = Array.new(16);
        let result[15] = false;
        let i = 14;

        while (i > -1) {
            if ((x / twoToThe[i]) = 1) {
                let result[i] = true;
                let x = x - twoToThe[i];
            }
            let i = i - 1;
        }

        if (negate) {
            let i = 0;
            while (i < 16) {
                let result[i] = ~result[i];
                let i = i + 1;
            }
        }

        return result;
    }

    /** Returns the absolute value of x. */
    function int abs(int x) {
        if (x < 0) {
            return x * -1;
        }

        return x;
    }

    /** Returns the product of x and y.
     *  When a Jack compiler detects the multiplication operator '*' in the
     *  program's code, it handles it by invoking this method. In other words,
     *  the Jack expressions x*y and multiply(x,y) return the same value.
     */
    function int multiply(int x, int y) {
        var Array yb;
        var int i, shiftedx, result;

        let yb = Math.bitArray(y);
        let i = 0;
        let shiftedx = x;
        let result = 0;

        while (i < 16) {
            if (yb[i]) {
                let result = result + shiftedx;
            }
            let shiftedx = shiftedx + shiftedx;
            let i = i + 1;
        }
        return sum;
    }

    /** Returns the integer part of x/y.
     *  When a Jack compiler detects the multiplication operator '/' in the
     *  program's code, it handles it by invoking this method. In other words,
     *  the Jack expressions x/y and divide(x,y) return the same value.
     */
    function int divide(int x, int y) {
    }

    /** Returns the integer part of the square root of x. */
    function int sqrt(int x) {
    }

    /** Returns the greater number. */
    function int max(int a, int b) {
        if (a < b) {
            return b;
        }
        return a;
    }

    /** Returns the smaller number. */
    function int min(int a, int b) {
        if (b < a) {
            return b;
        }
        return a;
    }
}
